!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/media/disk/myworkspace/git/pyplot/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/1a9f9537/
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
About	README.md	/^# About$/;"	c
_ecdf	tools/cdf.py	/^    def _ecdf(v):$/;"	f	function:ecdf	file:
args	tools/box.py	/^args = parse()$/;"	v
ax	tools/bar.py	/^ax = fig.add_subplot(1,1,1)$/;"	v
ax	tools/box.py	/^    ax = fig.add_subplot(rows,cols,col)$/;"	v
ax	tools/line.py	/^    ax = fig.add_subplot(1,cols,i+1)$/;"	v
ax	tools/surface.py	/^ax = fig.add_subplot(projection='3d')$/;"	v
barw	tools/bar.py	/^    barw = config.get('bar_width', 0.3)$/;"	v
barwidth	tools/box.py	/^    barwidth = conf.get('bar_width', 0.35)$/;"	v
bp	tools/box.py	/^    bp = ax.boxplot(vals, labels=labels, widths=barwidth)$/;"	v
col	tools/box.py	/^    col = i + 1$/;"	v
cols	tools/box.py	/^cols = 1$/;"	v
cols	tools/line.py	/^cols = len(config['subplots'])$/;"	v
conf	tools/box.py	/^    conf = yaml.safe_load(f)$/;"	v
config	tools/bar.py	/^    config = yaml.safe_load(f)$/;"	v
config	tools/line.py	/^    config = yaml.safe_load(f)$/;"	v
config	tools/surface.py	/^    config = yaml.safe_load(f)$/;"	v
config	tools/surface.py	/^config = DictObject(config)$/;"	v
cur_index	tools/surface.py	/^        cur_index = y_index[y]$/;"	v
draw_line	tools/pie.py	/^        def draw_line(theta, bar_pos):$/;"	f	function:main	file:
ecdf	tools/cdf.py	/^def ecdf(x, n):$/;"	f
fig	tools/bar.py	/^fig = plt.figure(figsize=config['figsize'])$/;"	v
fig	tools/box.py	/^fig = plt.figure(figsize=figsize)$/;"	v
fig	tools/line.py	/^fig = plt.figure(figsize=config['figsize'])$/;"	v
fig	tools/surface.py	/^fig = plt.figure()$/;"	v
figsize	tools/box.py	/^figsize = conf['figsize']$/;"	v
file_path	tools/bar.py	/^file_path = sys.argv[1]$/;"	v
file_path	tools/line.py	/^file_path = sys.argv[1]$/;"	v
format_text	tools/pie.py	/^def format_text(pct, allvals):$/;"	f
is_stacked	tools/bar.py	/^    is_stacked = isinstance(y_values[0], list)$/;"	v
labels	tools/box.py	/^    labels = conf['labels']$/;"	v
length	tools/surface.py	/^length = 0$/;"	v
main	pyplot	/^def main():$/;"	f
main	tools/cdf.py	/^def main():$/;"	f
main	tools/hist.py	/^def main():$/;"	f
main	tools/pie.py	/^def main():$/;"	f
mticker	tools/surface.py	/^import matplotlib.ticker as mticker$/;"	I	nameref:module:matplotlib.ticker
multi_experiment	tools/bar.py	/^def multi_experiment(config, ax):$/;"	f
np	tools/cdf.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	tools/hist.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	tools/surface.py	/^import numpy as np$/;"	I	nameref:module:numpy
outdir	tools/bar.py	/^outdir = '.\/out'$/;"	v
outdir	tools/box.py	/^outdir = '.\/out'$/;"	v
outdir	tools/line.py	/^outdir = '.\/out'$/;"	v
output_file	tools/bar.py	/^output_file = os.path.join(outdir, config['output'])$/;"	v
output_file	tools/box.py	/^output_file = os.path.join(outdir, conf['output'])$/;"	v
output_file	tools/line.py	/^output_file = os.path.join(outdir, config['output'])$/;"	v
p	tools/box.py	/^        p = ax.transAxes.inverted().transform(p)$/;"	v
p	tools/box.py	/^        p = ax.transData.transform((x,y))$/;"	v
pad_list_with_none	tools/bar.py	/^def pad_list_with_none(lst, count):$/;"	f
parse	tools/box.py	/^def parse():$/;"	f
parse	tools/cdf.py	/^def parse():$/;"	f
parse	tools/hist.py	/^def parse():$/;"	f
parse_args	pyplot	/^def parse_args():$/;"	f
plot_a_line	tools/line.py	/^def plot_a_line(ax, line):$/;"	f
plot_bar	tools/pie.py	/^def plot_bar(ax, config):$/;"	f
plot_pie	tools/pie.py	/^def plot_pie(ax, config):$/;"	f
plot_stacked	tools/bar.py	/^def plot_stacked(ax, x, y_values, config, barw=0.5):$/;"	f
plt	tools/bar.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	tools/box.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	tools/cdf.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	tools/hist.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	tools/line.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	tools/pie.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	tools/surface.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
reader	tools/surface.py	/^    reader = csv.DictReader(f)$/;"	v
rows	tools/box.py	/^rows = 1$/;"	v
subconf	tools/line.py	/^    subconf = config['subplots'][i]$/;"	v
surf	tools/surface.py	/^surf = ax.plot_surface(xs, ys, zs, cmap=cm.coolwarm, antialiased=False)$/;"	v
tmp	tools/line.py	/^        tmp = param.copy()$/;"	v
tool_dir	pyplot	/^tool_dir = '\/opt\/pyplot\/tools'$/;"	v
type_choices	pyplot	/^type_choices = ('line', 'bar', 'box', 'cdf', 'hist', 'surface', 'pie')$/;"	v
val	tools/bar.py	/^    val = config['legend']$/;"	v
vals	tools/box.py	/^    vals = conf['values']$/;"	v
x	tools/box.py	/^        x = xs[1] * 1.05$/;"	v
x	tools/surface.py	/^        x = float(row[config.x_key])$/;"	v
xs	tools/box.py	/^        xs, ys = l.get_data()$/;"	v
xs	tools/surface.py	/^xs = []$/;"	v
xs	tools/surface.py	/^xs = np.array(xs)$/;"	v
y	tools/box.py	/^        y = ys.mean() # mean of begining and end of median line y value$/;"	v
y	tools/surface.py	/^        y = float(row[config.y_key])$/;"	v
y_index	tools/surface.py	/^y_index = {}$/;"	v
y_values	tools/bar.py	/^    y_values = config['y']$/;"	v
ylabel	tools/box.py	/^        ylabel = conf['ylabel']$/;"	v
ys	tools/box.py	/^        xs, ys = l.get_data()$/;"	v
ys	tools/surface.py	/^ys = []$/;"	v
ys	tools/surface.py	/^ys = np.array(ys)$/;"	v
z	tools/surface.py	/^        z = float(row[config.z_key])$/;"	v
zs	tools/surface.py	/^zs = []$/;"	v
zs	tools/surface.py	/^zs = np.array(zs)$/;"	v
